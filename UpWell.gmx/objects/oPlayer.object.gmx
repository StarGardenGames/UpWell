<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerRun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerInitMovement();

arm_angle = 0;
arm_sprite = sPlayerArmNormal;
arm_frame = 0;
arm_speed = 0;

hpmax = 3;
hp = hpmax;

vsp = 0;
hsp = 0;

view_yview = y;// set low so it can be reset

edge = noone;
edge_locked = false;

mouse_counter = 0; 
mouse_counter_max = 8;
std_shoot = true; 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerMove();

arm_angle = point_direction(x,y,
    mouse_x+view_xview,mouse_y+view_yview);

if(mouse_check_button_pressed(mb_left) &amp;&amp; !edge_locked){
    playerShoots();
}
playerMouseOperation();

playerUpdateAnimation();

playerCheckDeath();

playerUpdateView();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var draw_angle=arm_angle
if(90 &lt; arm_angle &amp;&amp; arm_angle &lt; 270){
    draw_angle += 180
}

drawSpriteExt(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
drawSpriteExt(arm_sprite,arm_frame,x-18*image_xscale,y-17,
image_xscale,image_yscale,draw_angle,image_blend,image_alpha);

var xscale = -1+(hsp&gt;0)*2
var side_obj = collision_rectangle(x+26*xscale,y-44,x+32*xscale,y-49,oTerrain,false,true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
