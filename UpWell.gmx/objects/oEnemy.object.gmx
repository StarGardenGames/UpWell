<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sRex</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = choose(sRex, sRexBlack, sBat)

sp = 8;

tries = 0
while(tries &lt; 4 &amp;&amp; !place_free(x,y)){
    x = random(room_width)
    tries++;
}

if(tries == 4) instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = point_direction(x,y,oPlayer.x,oPlayer.y)
hsp = lengthdir_x(sp,dir)
vsp = lengthdir_y(sp,dir)

ter = instance_place(x+hsp,y+vsp,oTerrain)

if(ter != noone){
    if(ter.moving){
        instance_destroy()
    }else{
        var dx = x - ter.x
        var dy = y - ter.y
        
        if(abs(dx) &gt; abs(dy)){
            hsp = 0;
            if(random(30) &lt; 1){
                vsp = sp * sign(vsp)
            }else{
                vsp = sp * sign(prev_vsp)
            }
        }else{
            vsp = 0;
            if(random(30) &lt; 1){
                hsp = sp * sign(hsp)
            }else{
                hsp = sp * sign(prev_hsp)
            }
        }
    }
}

if(!place_free(x+hsp,y)) hsp = 0
if(!place_free(x,y+vsp)) vsp = 0

image_xscale = -1 + (hsp &gt; 0)*2

if(place_meeting(x,y,oPlayer)){
    instance_destroy();
    oPlayer.hp--;
}

prev_hsp = hsp
prev_vsp = vsp

x += hsp
y += vsp

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
